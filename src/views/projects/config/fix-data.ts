export default {
  items: [
    {
      id: '3e6c7787-0c0e-44f6-939d-21834aef8d62',
      createTime: '2022-10-28T06:40:36.492235Z',
      updateTime: '2022-10-28T06:40:36.492235Z',
      resourceID: 'fa2127e5-f9e6-4a92-9ec1-e226010f1f04',
      eventID: 'd3cfbe89-82ca-4151-9c94-a5c97bec13b4',
      type: 'vulnerability',
      isFixable: true,
      compatibilityLevel: 'high',
      compatibilityDetail: {},
      strategy: 'security',
      packageManageFilePath: 'go.mod',
      plugin: {
        name: 'sca',
        version: 'dev (HEAD)',
      },
      softwarePackage: {
        name: 'github.com/prometheus/client_golang',
        packageManager: 'golang',
        from: {
          version: 'v1.11.0',
          releaseTime: '2021-06-07T12:32:16Z',
          vulnerabilities: {
            total: 1,
            critical: 0,
            high: 1,
            medium: 0,
            low: 0,
            none: 0,
            vulnerabilities: [
              {
                namespace: 'ghsa',
                name: 'GHSA-cg3q-j54f-5p7p',
                purl: 'pkg:golang/github.com/prometheus/client_golang#/prometheus/promhttp',
                tags: ['CVE-2022-21698'],
                description: 'Uncontrolled Resource Consumption in promhttp',
                mitigation:
                  'If you cannot upgrade to v1.11.1 or above, in order to stop being affected you can:\n- Remove `method` label name from counter/gauge you use in the InstrumentHandler.\n- Turn off affected promhttp handlers.\n- Add custom middleware before promhttp handler that will sanitize the request method given by Go http.Request.\n- Use a reverse proxy or web application firewall, configured to only allow a limited set of methods.\n',
                affected: '<1.11.1',
                patched: ['1.11.1'],
                cvss: {
                  version: '3.1',
                  vectorString: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H',
                  baseScore: 7.5,
                  baseSeverity: 'HIGH',
                  exploitabilityScore: 3.9,
                  impactScore: 3.6,
                },
                cwes: ['CWE-772', 'CWE-400'],
                modified: '2022-07-05T18:06:13Z',
                published: '2022-02-16T22:26:35Z',
              },
            ],
          },
        },
        to: {
          version: 'v1.11.1',
          releaseTime: '2022-02-15T10:38:19Z',
          vulnerabilities: {
            total: 0,
            critical: 0,
            high: 0,
            medium: 0,
            low: 0,
            none: 0,
            vulnerabilities: null,
          },
        },
      },
    },
    {
      id: 'bbb41175-c52e-469c-a080-c8def7822e67',
      createTime: '2022-10-28T06:17:20.727342Z',
      updateTime: '2022-10-28T06:17:20.727342Z',
      resourceID: 'fa2127e5-f9e6-4a92-9ec1-e226010f1f04',
      eventID: 'd3cfbe89-82ca-4151-9c94-a5c97bec13b4',
      type: 'vulnerability',
      isFixable: false,
      compatibilityLevel: '',
      compatibilityDetail: {},
      strategy: '',
      packageManageFilePath: 'module1/go.mod',
      plugin: {
        name: 'sca',
        version: 'dev (HEAD)',
      },
      softwarePackage: {
        name: 'github.com/ipld/go-codec-dagpb',
        packageManager: 'golang',
        from: {
          version: 'v1.3.0',
          releaseTime: '2021-08-12T15:17:12Z',
          vulnerabilities: {
            total: 1,
            critical: 0,
            high: 0,
            medium: 1,
            low: 0,
            none: 0,
            vulnerabilities: [
              {
                namespace: 'ghsa',
                name: 'GHSA-g3vv-g2j5-45f2',
                purl: 'pkg:golang/github.com/ipld/go-codec-dagpb',
                description: 'Panic when processing certain blocks',
                mitigation:
                  'You can work around this issue without upgrading by recovering panics higher in the call stack of the goroutine that calls the defective code.\n',
                affected: '<1.3.1',
                patched: ['1.3.1'],
                cvss: {
                  version: '3.1',
                  vectorString: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N',
                  baseScore: 6.5,
                  baseSeverity: 'MEDIUM',
                  exploitabilityScore: 3.9,
                  impactScore: 2.5,
                },
                modified: '2022-04-12T21:41:41Z',
                published: '2022-04-08T22:08:45Z',
              },
            ],
          },
        },
        to: {
          releaseTime: '0001-01-01T00:00:00Z',
          vulnerabilities: {
            total: 0,
            critical: 0,
            high: 0,
            medium: 0,
            low: 0,
            none: 0,
            vulnerabilities: null,
          },
        },
        reason: 'Package is indirect dependency, need to fix it manually',
      },
    },
    {
      id: '740f4f65-b6ea-4038-bd08-473ef24a194e',
      createTime: '2022-10-28T06:35:52.574712Z',
      updateTime: '2022-10-28T06:35:52.574712Z',
      resourceID: 'fa2127e5-f9e6-4a92-9ec1-e226010f1f04',
      eventID: 'd3cfbe89-82ca-4151-9c94-a5c97bec13b4',
      type: 'vulnerability',
      isFixable: false,
      compatibilityLevel: '',
      compatibilityDetail: {},
      strategy: '',
      packageManageFilePath: 'module1/go.mod',
      plugin: {
        name: 'sca',
        version: 'dev (HEAD)',
      },
      softwarePackage: {
        name: 'github.com/ipld/go-codec-dagpb',
        packageManager: 'golang',
        from: {
          version: 'v1.3.0',
          releaseTime: '2021-08-12T15:17:12Z',
          vulnerabilities: {
            total: 1,
            critical: 0,
            high: 0,
            medium: 1,
            low: 0,
            none: 0,
            vulnerabilities: [
              {
                namespace: 'ghsa',
                name: 'GHSA-g3vv-g2j5-45f2',
                purl: 'pkg:golang/github.com/ipld/go-codec-dagpb',
                description: 'Panic when processing certain blocks',
                mitigation:
                  'You can work around this issue without upgrading by recovering panics higher in the call stack of the goroutine that calls the defective code.\n',
                affected: '<1.3.1',
                patched: ['1.3.1'],
                cvss: {
                  version: '3.1',
                  vectorString: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N',
                  baseScore: 6.5,
                  baseSeverity: 'MEDIUM',
                  exploitabilityScore: 3.9,
                  impactScore: 2.5,
                },
                modified: '2022-04-12T21:41:41Z',
                published: '2022-04-08T22:08:45Z',
              },
            ],
          },
        },
        to: {
          releaseTime: '0001-01-01T00:00:00Z',
          vulnerabilities: {
            total: 0,
            critical: 0,
            high: 0,
            medium: 0,
            low: 0,
            none: 0,
            vulnerabilities: null,
          },
        },
        reason: 'Package is indirect dependency, need to fix it manually',
      },
    },
  ],
  pagination: {
    page: 1,
    perPage: 3,
    total: 24,
    totalPage: 8,
    partial: true,
  },
  filters: {
    compatibilityLevel: {
      options: ['low', 'medium', 'high'],
    },
    eventID: {},
    resourceID: {},
    strategy: {
      options: ['security', 'compatibility'],
    },
  },
  extraInfos: {
    summary: {
      fromVulnerabilities: {
        total: 33,
        critical: 0,
        high: 9,
        medium: 22,
        low: 2,
        none: 0,
      },
      toVulnerabilities: {
        total: 7,
        critical: 0,
        high: 1,
        medium: 5,
        low: 1,
        none: 0,
      },
    },
  },
};
