export default {
  'intergration.input.holder': 'please enter a name',
  'intergration.sourceRepo': 'Source Code Repository',
  'intergration.proxy': 'Artifact Proxy',
  'intergration.pushService': 'Push Service',
  'intergration.projectmanage': 'Project Management',
  'intergration.containerRepo': 'Container Registry',
  'intergration.containerRepo.images': 'OCI',
  'intergration.containerOrchestration': 'Container Orchestration',
  'intergration.all': 'All',
  'intergration.setting': 'Settings',
  'intergration.configured': 'configured',
  'intergration.unconfigured': 'unconfigured',
  'intergration.notopen': 'to be opened',
  'intergration.button.create': 'Add Proxy',
  'intergration.button.add': 'Add {service}',
  'intergration.setting.title': 'integration setting',
  'intergration.accessToken': 'Access Token',
  'intergration.repo.app': '{repo} application',
  'intergration.repo.clientId': 'Client ID',
  'intergration.repo.clientSecret': 'Client Secret',
  'intergration.accessRepo': 'Repository Access',
  'intergration.access.allRepo':
    'Access to both public and private repositories',
  'intergration.access.pubRepo': 'Only access public repositories',
  'intergration.tokenTips': '输入的访问令牌需要对导入的代码仓库拥有管理权限',
  'intergration.createToken.title': '在{repo}创建访问令牌：',
  'intergration.createToken.step1':
    '1.点击下方按钮登录{repo}，在Note一栏输入Token备注，如Seal',
  'intergration.createToken.step2': '2.配置过期时间，将Scope配置为repo',
  'intergration.createToken.step3': '3.点击Generate Token',
  'intergration.createToken.step4': '4.将Token复制粘贴到左侧Access Token一栏中',
  'intergration.createToken.button': 'Creat Access Token',
  'intergration.createApp.gitlab.private': 'Use private {repo}',
  'intergration.createApp.gitlab.step1':
    'If it is a public GitLab service, click the button below to set the application in the new window',
  'intergration.createApp.gitlab.step2': 'Fill in the form content',
  'intergration.createApp.gitlab.step2.3': '- Redirect URI:',
  'intergration.createApp.gitlab.step2.4': '- Scopes check api',
  'intergration.createApp.gitlab.step3': 'Click 【Save application】 button',
  'intergration.createApp.gitlab.step4':
    'Copy the application ID to the client ID on the left form',
  'intergration.createApp.gitlab.step5':
    'Copy Secret to Client Secret on the left form',
  'intergration.createApp.gitlaburl': 'GitLab URL',
  'intergration.createApp.jiraurl': 'Jira Namespace',
  'intergration.jiraurl.url': 'Jira Address',
  'intergration.createApp.title': 'Setting {repo} Application：',
  'intergration.createApp.reconfig': 'reconfigure',
  'intergration.createApp.step1':
    'Click the button below to set the application in the new window',
  'intergration.createApp.gitlab.step1.1':
    'If it is a private GitLab service, check 「Use private GitLab」 on the left',
  'intergration.createApp.gitlab.step1.2': '- Enter the GitLab URL',
  'intergration.createApp.gitlab.step1.3':
    '- Click the button below to set the application in the new window',
  'intergration.createApp.step2': `Click 【New OAuth App】，and fill in the form content`,
  'intergration.createApp.gitlab.step2.1': `Click 【New OAuth App】，and fill in the form content`,
  'intergration.createApp.step2.2': `- Application Name: e.g.: My Seal`,
  'intergration.createApp.step2.3': `- Application homepage URL: {baseurl}`,
  'intergration.createApp.step2.4': `- Application description: optional`,
  'intergration.createApp.step2.5': `- Authorization callback URL: {baseurl}`,
  'intergration.createApp.step3': 'Click 【Generate a new client secret】',
  'intergration.createApp.step4':
    'Copy and paste client secret and client ID into the input box on the left',
  'intergration.createApp.button': 'Create {repo} App',
  'intergration.scan.title': 'Seal vulnerability scan',
  'intergration.scan.opts1': 'Scan for new Pull Request',
  'intergration.scan.opts2':
    'Automatically create Pull Requests to fix vulnerabilities',
  'intergration.scan.opts3':
    'Regularly scan the source code for vulnerabilities',
  'intergration.scan.opts4':
    'Scan the source code when a webhook event is receive',
  'intergration.button.connect': 'Connect {repo}',
  'intergration.token.message': 'access token is required',
  'intergration.button.save': 'Save',
  'intergration.policy.title': '{repo} Proxy Repository',
  'intergration.policy.label': 'Proxy Setting',
  'intergration.form.repoName': 'Proxy Repository Name:',
  'intergration.form.repoNameDesc':
    'Tips: The unique name of the proxy repository, which only supports letters, numbers, and hyphens (-), and starts with a letter and ends with a letter or number.',
  'intergration.form.repoUrl': 'Upstream Repository URL:',
  'intergration.policy.bind': '策略绑定',
  'intergration.policy.list': '可选策略',
  'intergration.policy.selected': '应用策略',
  'intergration.rules.repoName':
    'only letters, numbers, underscores (_), hyphens (-) and dot (.) are supported',
  'intergration.rules.first':
    'cannot start with an underscore(_), hyphen(-), or dots(.)',
  'intergration.rules.required': 'proxy repo name is required',
  'intergration.rules.clientSecret': 'Client Secret is required',
  'intergration.rules.clientId': 'Client ID is required',
  'intergration.repoPolicy.name': 'Name',
  'intergration.repoPolicy.proxyUrl': 'Proxy URL',
  'intergration.repoPolicy.upstreamUrl': 'Upstream URL',
  'intergration.rules.upstreamUrl': 'upstream repository url required',
  'intergration.email.title': 'Edit SMTP Server Configure',
  'intergration.email.list.title': 'Email SMTP Service',
  'intergration.email.id': 'Name',
  'intergration.email.ip': 'Host',
  'intergration.email.port': 'Port',
  'intergration.email.sender': 'Sender',
  'intergration.email.userName': 'UserName',
  'intergration.email.tls': 'Use TLS',
  'intergration.email.password': 'Password',
  'intergration.email.description': 'Description',
  'intergration.email.testAccount': 'Test Account Settings',
  'intergration.email.usetls': 'Use TLS',
  'intergration.email.defaultReceipient': 'Receipient',
  'intergration.email.idDesc':
    'This is the unique identifying name of the SMTP server definition.',
  'intergration.email.senderDesc': 'This is the email address of the sender',
  'intergration.email.userNameDesc':
    'If the SMTP server requires authentication you need to specify the user',
  'intergration.rules.host': 'host address is required',
  'intergration.rules.webhook.name': 'name is required',
  'intergration.rules.host.url': 'host address format invalid',
  'intergration.rules.host.id': 'name is required',
  'intergration.rules.port': 'server port is required',
  'intergration.rules.sender': 'sender is required',
  'intergration.rules.password': 'password cannot be empt',
  'intergration.rules.receiver': 'receiver is required',
  'intergration.rules.gitlaburl': 'gitlab URL is required',
  'intergration.rules.jiraurl': 'Jira namespace is required',
  'intergration.rules.webhook': 'webhook url is required',
  'intergration.webhook.title.create': 'Submit a new custom webhook',
  'intergration.webhook.title.edit': 'Edit custom webhook',
  'intergration.webhook.list.title': 'custom webhooks',
  'intergration.webhook.tips':
    'GitGuardian allows you to receive notifications on any server that accepts incoming json-encoded http post requests. In order to do so, you must simply provide the url endpoint you want receive alerts from. We use signature mechanism in order to let you verify that the message comes from us. We generate a signature token by default that you can edit. This signature token is compulsory for the signature verification on your side.',
  'intergration.webhook.tokenTips':
    "Make sure to copy your signature token as you won't be able to access it again",
  'intergration.webhook.name': 'Name',
  'intergration.webhook.testing': 'Test Webhook Settings',
  'intergration.webhook.nameHolder': 'My custom webhook',
  'intergration.webhook.contentType': 'Content type',
  'intergration.webhook.contentTypeHolder': 'application/json',
  'intergration.webhook.url': 'Webhook URL',
  'intergration.webhook.urlHolder': 'https://webhook.url/endpoint',
  'intergration.webhook.token': 'Signature token',
  'intergration.webhook.noticeFre': 'Frequency of incident notifications',
  'intergration.webhook.notice.only':
    'Only at the first occurrence and in case of regression',
  'intergration.webhook.notice.all': 'At all occurrences',
  'intergration.proxy.instruction': 'Instruction',
  'intergration.webhook.recommended': 'Recommended',
  'intergration.proxy.title.instruction': 'Proxy Repo Instruction',
  'intergration.pushservice.email': 'Email',
  'intergration.pushservice.webhook': 'Webhook',
  'intergration.pushservice.dingding': 'DingDing',
  'intergration.pushservice.feishu': 'FeiShu',
  'intergration.pushservice.wechat': 'WeChat',
  'intergration.pushservice.zentao': 'ZenTao',
  'intergration.pushservice.add.email': 'SMTP Service',
  'intergration.pushservice.add.Webhook': 'Webhook',
  'intergration.createApp.jira.step2': `Click the 【Create】 button, select OAuth 2.0 integration, and enter the app name`,
  'intergration.createApp.jira.step2.2': `- name: e.g.: My Seal，submit your form`,
  'intergration.createApp.jira.step3': `Click the 「Permissions」 menu to configure the applicable API`,
  'intergration.createApp.jira.step3.1': `- Click 【Add】 to add the Jira API`,
  'intergration.createApp.jira.step4': `Click the 「Authorization」 menu`,
  'intergration.createApp.jira.step4.1': `- Click 【Add】 and enter the authorization callback URL: {baseurl}`,
  'intergration.createApp.jira.step5': 'Click on the 「Settings」 menu',
  'intergration.jira.form.url': 'Please enter your Jira url',
  'intergration.createApp.jira.step3.2': `- Click 【Configure】 to configure Jira API authorization scopes`,
  'intergration.createApp.jira.step3.3': `- Select the 【Classic scopes】 tab and click 【Edit Scopes】 and select read:jira-work, read:jira-user, write:jira-work`,
  'intergration.jira.form.title': 'Select the Jira namespace',
  'intergration.jira.form.authrize': 'Authorization Type',
  'intergration.jira.rules.url': 'Jira URL is required',
  'intergration.jira.rules.token': 'Access Token is required',
  'intergration.jira.private.title': 'Private Service',
  'intergration.jira.cloud.title': 'Cloud Service',
  'intergration.jira.private.token.title': 'Access Token authorization',
  'intergration.jira.private.token.step1': 'Create Token',
  'intergration.jira.private.token.step1.0':
    '- Check「Use private Jira」on the left，enter the Jira address',
  'intergration.jira.private.token.step1.1': '- Click the button below ',
  'intergration.jira.private.token.step1.2':
    '- Select the 「Profile」 menu in the Personal Center, then select 「Personal Access Tokens」',
  'intergration.jira.private.token.step1.3':
    '- Click 【Create Token】, enter in your token name, set【Expiry Date】, and click 【Create】',
  'intergration.jira.private.token.step1.4':
    '- Copy your access token and paste it into the Access Token input box on the left',
  'intergration.jira.private.oauth2.title': 'OAuth2.0 authorization ',
  'intergration.jira.private.oauth2.step1.1':
    "- Select Manage's 「Applications」 menu",
  'intergration.jira.private.oauth2.step2': 'Click on 【Create Link】',
  'intergration.jira.private.oauth2.step2.1':
    '- Select 【External Application】 for the application type',
  'intergration.jira.private.oauth2.step2.2':
    '- Select 【Incoming】 for the direction',
  'intergration.jira.private.oauth2.step3':
    'Fill in the configuration information',
  'intergration.jira.private.oauth2.step3.1':
    '- Fill in the app name, e.g.: my seal',
  'intergration.jira.private.oauth2.step3.2': '- Fill in the redirect URL:',
  'intergration.jira.private.oauth2.step4':
    'Permission selection: select Write',
  'intergration.jira.private.oauth2.step5':
    'Copy and paste client secret, client ID into the left input box',
  'intergration.jira.private.oauth2.version':
    'Only Jira version 8.22.0+ is supported',
  'intergration.jira.private.token.version':
    'Only Jira version 8.14+ is supported',
  'intergration.containerrepo.standar': 'Standard',
  'intergration.containerrepo.form.kuberconfig': 'Kubeconfig File',
  'intergration.containerrepo.form.cluster': 'Cluster',
  'intergration.containerrepo.form.clustername': 'Cluster Name',
  'intergration.containerrepo.form.excludes': 'Excluded Namespaces',
  'intergration.containerrepo.kubeconfig.desc':
    'You can upload a configuration file or enter it directly in the textarea below',
  'intergration.containerrepo.namespace.desc':
    'Enter the namespace and press Enter to confirm, can be configured with multiple',
  'intergration.containerrepo.file.desc': 'File format: yaml or text file',
  'intergration.containerrepo.options.system': 'System',
  'intergration.containerrepo.options.custom': 'Custom',
  'intergration.containerrepo.options.none': 'None',
  'intergration.containerrepo.options.holder':
    'Enter the namespace and press Enter to confirm',
  'intergration.containerrepo.form.address': 'Address',
  'intergration.containerrepo.title': '{repo} Container Registry',
  'intergration.containerrepo.config.test': 'Test Settings',
  'intergration.rules.container.url': 'address is required',
  'intergration.container.url.holder': '(e.g.) https://index.docker.io',
  'intergration.rules.kuber.name': 'cluster name is required',
  'intergration.rules.kuber.config': 'configuration is required',
  'intergration.rules.container.username': 'username is required',
  'intergration.rules.container.password': 'password is required',
  'intergration.containerrepo.list.adds': '{repo} Registry',
  'intergration.containerrepo.upload': 'Read from a file',
  'intergration.containerrepo.connect': 'Connection Method',
  'intergration.containerrepo.connect.desc': 'Default is secure connection',
  'intergration.containerrepo.connect.insecure': 'non-secure connection',
  'intergration.containerrepo.connect.verify': 'Verify Remote Certificate',
  'intergration.containerrepo.verify.tips':
    'Determines whether to verify the secure connection to the remote container registry. Check this if the remote registry is using HTTP protocol, self-signed or untrusted certificates.',
};
