export default {
  'policy.sourceRepo.title': 'Source Code Repository',
  'policy.sourceRepo.basicConfig': 'Configuration Check',
  'policy.sourceRepo.flowControl': 'Process Control',
  'policy.sourceRepo.codeCheck': 'Source Code Inspection',
  'policy.menu.sourceRepo': 'Source Code Repository',
  'policy.menu.proxyRepo': 'Artifact Repository',
  'policy.menu.analysis': 'Composition Analysis',
  'policy.menu.whiteList': 'Whitelist',
  'policy.button.add': 'Add policy',
  'policy.button.test': 'Test Expression',
  'policy.table.number': 'Number',
  'policy.holder.policyName': 'Please enter policy name',
  'policy.table.checkPolicy': 'Inspect Policy',
  'policy.table.riskLevel': 'Severity',
  'policy.table.operation': 'Operation',
  'policy.table.switch': 'Enable',
  'policy.risk.all': 'All',
  'policy.risk.critical': 'Critical',
  'policy.risk.high': 'High',
  'policy.risk.middle': 'Medium',
  'policy.risk.low': 'Low',
  'policy.detail.title': 'Policy Name',
  'policy.detail.overview': 'Overview',
  'policy.detail.type': 'Type',
  'policy.detail.level': 'Level',
  'policy.detail.conditions': 'Constraints',
  'policy.detail.action': 'Action',
  'policy.detail.sastSecretLeaks': 'SAST Secret Leaks',
  'policy.detail.sastCustomSecretLeaks': 'SAST Custom Secret Leaks',
  'policy.detail.secretLeaksPresent': 'There is a key leaks',
  'policy.detail.sastSecretLeaksAllow': 'SAST Secret Leaks Allow',
  'policy.detail.vulnerabilityCVSScore': 'Vulnerability Analysis',
  'policy.detail.configCheck': 'Configuration Check',
  'policy.detail.licenseCompliance': 'License Compliance',
  'policy.detail.cvsParamsMetricName': 'CVS Scoring Metrics',
  'policy.detail.cvsParamsMetricMax': 'Maximum',
  'policy.detail.cvsParamsMetricMin': 'Minimum',
  'policy.action.block': 'block',
  'policy.action.permit': 'permit',
  'policy.action.warn': 'warn',
  'policy.action.sca1': 'Block when high or critical severity vulnerabilities',
  'policy.action.sca2': 'Block when high or critical severity vulnerabilities',
  'policy.action.sca3': 'Warn low severity vulnerabilities',
  'policy.action.sca4': 'Warn if finding any license which is not recommended',
  'policy.action.sca5':
    'Warn if finding any license which is not recommended in distributing',
  'policy.action.sca6':
    'Warn if finding any license which is not recommended in deploying',
  'policy.action.sca7': 'Warn when license belong to commercial license group',
  'policy.action.sca8': 'Warn when license belong to commercial license group',
  'policy.action.sca9': 'Ignore when vulnerabilities in the list',
  'policy.action.conf1': 'Warn branch protection rule is not configured',
  'policy.action.conf2':
    'Warn when configuration require numbers of approvals before merging to default branch is not satisfied',
  'policy.action.conf3':
    'Warn when configuration dismiss stale pull request approvals when commits are pushed is disabled',
  'policy.action.conf4':
    'Warn when require an approved review in pull requests from code owner is disabled',
  'policy.action.conf5':
    'Warn users with push access could force push to default branch is configured',
  'policy.action.conf6':
    'Warn users with push access could delete default branch is configured',
  'policy.action.conf7':
    'Warn when require status checks before merging to default branch is not configured',
  'policy.action.sast1':
    'Block hardcoded secrets like passwords, api keys, and tokens',
  'policy.action.repo.config': 'Repository Configuration Analyze',
  'policy.detail.conditionType.severity': 'Vulnerability level',
  'policy.detail.conditionType.licenseName': 'License name',
  'policy.detail.conditionType.requiredApprovingCount':
    'Number of approvals required before merge',
  'policy.detail.conditionType.secretLeaksFilePathRegex': 'File Name',
  'policy.detail.conditionType.secretLeaksRegex': 'Secret Key',
  'policy.detail.operator.equal': 'equal',
  'policy.detail.operator.matches': 'regexp',
  'policy.detail.operator.notequal': 'not equal',
  'policy.detail.operator.gt': 'great than',
  'policy.detail.operator.ge': 'great than or equal to',
  'policy.detail.operator.lt': 'less than',
  'policy.detail.operator.le': 'Less than or equal to',
  'policy.detail.operator.in': 'contain',
  'policy.detail.operator.notin': 'not contain',
  'policy.detail.operator.and': 'all of',
  'policy.detail.operator.or': 'any of',
  'policy.detail.operator.follow': 'the following',
  'policy.detail.operator.versionGreaterThan': 'version greater than',
  'policy.detail.operator.versionLessThan': 'version less than',
  'policy.detail.operator.versionWithinRange': 'version within range',
  'policy.detail.operator.conditions': 'conditions',
  'policy.detail.operator.all': 'All',
  'policy.detail.operator.partial': 'Partial',
  'policy.detail.operator.containTags': 'Contain tags',
  'policy.detail.operator.all.projects': 'All resources',
  'policy.detail.operator.all.proxy': 'All proxies',
  'policy.detail.operator.partial.projects': 'Resource',
  'policy.detail.operator.parital.proxy': 'Proxy',
  'policy.detail.operator.condition.form': 'Form',
  'policy.detail.operator.condition.express': 'Expression',
  'policy.detail.condition.all': 'Meet all conditions',
  'policy.detail.condition.any': 'Meet any condition',
  'policy.detail.condition.and': 'And',
  'policy.detail.condition.in': 'In',
  'policy.detail.condition.or': 'Or',
  'policy.detail.vulner.level': 'Vulnerability level',
  'policy.detail.condition.cvsscore': 'Vulnerability Score',
  'policy.detail.condition.serverity': 'Vulnerability Serverity',
  'policy.detail.operator.belongToGroup': 'License Has Any Tags',
  'policy.detail.operator.licenseHasAnyTags': 'Has Any Tags',
  'policy.detail.operator.hasAnyTags': 'Has Any Tags',
  'policy.detail.operator.withinRange': 'With in range',
  'policy.detail.rules.name': 'policy name is required',
  'policy.detail.rules.catgory': 'policy type is required',
  'policy.detail.rules.scopePartial': 'select at least one',
  'policy.detail.rules.level': 'vulnerability serverity is required',
  'policy.detail.rules.description': 'description is required',
  'policy.detail.rules.scope': 'select at least one',
  'policy.detail.rules.scopeProject': 'project is required',
  'policy.detail.rules.scopeProxy': 'proxy is required',
  'policy.detail.rules.tags': 'tags is required',
  'policy.detail.rules.condition': 'condition type is required',
  'policy.detail.rules.conditionType': 'condition is required',
  'policy.detail.rules.operator': 'operator is required',
  'policy.detail.rules.condition.value': 'value is required',
  'policy.detail.rules.expression': 'expression is required',
  'policy.detail.rules.action': 'action type is required',
  'policy.detail.rules.version': 'start value and end value are required',
  'policy.action.sca.whiteList': 'Ignore when vulnerabilities in the whiteList',
  'policy.detail.condition.vulnerId': 'vulnerability IDs',
  'policy.detail.condition.file': 'File Name',
  'policy.detail.condition.licenseIDs': 'license IDs',
  'policy.detail.condition.checkDisable':
    'branch protection pequired status check disabled',
  'policy.detail.condition.reviewDisabled':
    ' branch protection pull request dismiss stale review disabled',
  'policy.detail.condition.ownerReviewDisabled':
    'branch protection pull request require code owner review disabled',
  'policy.detail.condition.allowDeletion': 'branch protection allow deletion',
  'policy.detail.condition.approvingCount':
    'branch protection pull request approving count',
  'policy.detail.condition.requestDisabled':
    'branch protection pull request disabled',
  'policy.detail.condition.forcePush': 'branch protection allow force push',
  'policy.detail.category.dependencies': 'Dependency package analysis',
  'policy.detail.category.packageName': 'Dependency package name',
  'policy.detail.category.packageNamespace': 'Dependency package namespace',
  'policy.detail.category.packageVersion': 'Dependency package version',
  'policy.detail.category.packageType': 'Dependencies management tool',
  'policy.detail.edit.basic': 'Basic Information',
  'policy.detail.edit.policyName': 'Policy Name',
  'policy.detail.edit.group': 'Category',
  'policy.detail.edit.type': 'Type',
  'policy.detail.edit.sererity': 'Sererity',
  'policy.detail.edit.description': 'Description',
  'policy.detail.edit.scope': 'Scope',
  'policy.detail.edit.available': 'Available In',
  'policy.detail.edit.projects': 'Resource',
  'policy.detail.edit.importPro': 'Go to import projects',
  'policy.detail.edit.proxy': 'Proxy',
  'policy.detail.edit.setProxy': 'Go to set proxy',
  'policy.detail.edit.setTags': 'Multiple tags separate with commas (,)',
  'policy.detail.edit.constraint': 'Constraints',
  'policy.detail.edit.format': 'Data Format',
  'policy.detail.edit.follow': 'Meet Conditions',
  'policy.detail.edit.followExpr': 'Meet Expression',
  'policy.detail.edit.exprRef': 'more reference',
  'policy.detail.rules.category': 'category is required',
  'policy.detail.expre.holder': 'Please enter an expression',
  'policy.detail.edit.tips': 'Please select a policy type before editing',
  'policy.detail.driver.policyType': 'Select a policy type',
  'policy.detail.driver.policyTypeDesc':
    'This step select the type of policy you want to add',
  'policy.detail.driver.policyGroup': 'Select policy category',
  'policy.detail.driver.policyGroupDesc':
    'This step select the policy category you want to add',
  'policy.detail.driver.formType': 'Form way - add constraints',
  'policy.detail.driver.formTypeDesc':
    'The constraint options here are related to the policy type selected in the first step. Different policy types correspond to different optional constraints. The policy type must be selected before selection.',
  'policy.detail.driver.expressionType': 'Expression way - add constraints',
  'policy.detail.driver.expressionTypeDesc':
    'If you are familiar with our configuration options, you can quickly add constraints by coding, which is equivalent to the form method',
};
